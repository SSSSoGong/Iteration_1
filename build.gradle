plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.ssssogong'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'



	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
//	testImplementation("org.junit.vintage:junit-vintage-engine") {
//		exclude group: "org.hamcrest", module: "hamcrest-core"
//	}
//	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
//	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

	//jwt: https://github.com/jwtk/jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
}

tasks.named('test') {
	useJUnitPlatform()
}
